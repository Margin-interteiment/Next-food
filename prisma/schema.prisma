generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())

  fullName String
  email    String   @unique
  password String
  role     UserRole @default(USER)

  provider   String?
  providerId String?

  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  cart             Cart?
  orders           Order[]
  VerificationCode VerificationCode?
  verified         DateTime
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products Product[]
}

model Product {
  id Int @id @default(autoincrement())

  name       String
  imageUrl   String
  categoryId Int
  text       String

  ingredients Ingredient[]
  items       ProductItem[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  category  Category? @relation(fields: [categoryId], references: [id])
}

model ProductItem {
  id Int @id @default(autoincrement())

  price      Int
  size       Int?
  burgerType Int?
  product    Product    @relation(fields: [productId], references: [id])
  productId  Int
  cartItem   CartItem[]
}

model Ingredient {
  id Int @id

  name     String
  imageUrl String
  price    Int

  products  Product[]
  cartItems CartItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cart {
  id Int @id @default(autoincrement())

  user   User? @relation(fields: [userId], references: [id])
  userId Int?  @unique

  token String

  totalAmount Int @default(0)

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  items     CartItem[]
}

model CartItem {
  id Int @id @default(autoincrement())

  productItem   ProductItem @relation(fields: [productItemId], references: [id])
  productItemId Int

  cart   Cart @relation(fields: [cartId], references: [id])
  cartId Int

  quantity Int

  ingredients Ingredient[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id Int @id @default(autoincrement())

  user   User? @relation(fields: [userId], references: [id])
  userId Int

  totalAmount Int
  token       String

  status    OrderStatus
  paymentId String?

  items    Json
  fullName String
  email    String
  address  String
  phone    String
  comment  String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationCode {
  id Int @id @default(autoincrement())

  user   User? @relation(fields: [userId], references: [id])
  userId Int   @unique

  code String

  expiredAt DateTime @default(now())
}

enum OrderStatus {
  PENDING
  SUCCEEDED
  CANCELLED
}

enum UserRole {
  ADMIN
  USER
}
